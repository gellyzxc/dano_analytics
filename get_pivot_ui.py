import pandas as pd
from pivottablejs import pivot_ui
import matplotlib.pyplot as plt

df = pd.read_csv('data.csv')

dtps = {
    "Белгородская область": "621",
    "Брянская область": "221",
    "Владимирская область": "952",
    "Воронежская область": "1324",
    "Ивановская область": "618",
    "Калужская область": "632",
    "Костромская область": "545",
    "Курская область": "576",
    "Липецкая область": "584",
    "Москва": "4566",
    "Московская область": "1883",
    "Орловская область": "347",
    "Рязанская область": "741",
    "Смоленская область": "407",
    "Тамбовская область": "574",
    "Тверская область": "711",
    "Тульская область": "893",
    "Ярославская область": "729",
    "Республика Карелия": "358",
    "Республика Коми": "443",
    "Архангельская область": "304",
    "Вологодская область": "731",
    "Калининградская область": "629",
    "Ленинградская область": "878",
    "Санкт-Петербург": "2135",
    "Мурманская область": "317",
    "Новгородская область": "346",
    "Псковская область": "453",
    "Ненецкий автономный округ": "18",
    "Республика Адыгея (Адыгея)": "192",
    "Республика Калмыкия": "323",
    "Республика Крым": "662",
    "Краснодарский край": "3104",
    "Волгоградская область": "1192",
    "Ростовская область": "1503",
    "Астраханская область": "469",
    "гор. Севастополь": "260",
    "Республика Дагестан": "884",
    "Республика Ингушетия": "104",
    "Кабардино-Балкарская Республика": "356",
    "Карачаево-Черкесская Республика": "186",
    "Республика Северная Осетия-Алания": "440",
    "Чеченская Республика": "61",
    "Ставропольский край": "1235",
    "Республика Башкортостан": "1455",
    "Республика Марий Эл": "361",
    "Республика Мордовия": "311",
    "Республика Татарстан (Татарстан)": "1587",
    "Удмуртская Республика": "835",
    "Чувашская Республика — Чувашия": "407",
    "Пермский край": "1031",
    "Кировская область": "878",
    "Нижегородская область": "2208",
    "Оренбургская область": "621",
    "Пензенская область": "846",
    "Самарская область": "1457",
    "Саратовская область": "1110",
    "Ульяновская область": "472",
    "Курганская область": "376",
    "Свердловская область": "1467",
    "Тюменская область": "1560",
    "Челябинская область": "1667",
    "Ханты-Мансийский автономный округ — Югра": "561",
    "Ямало-Ненецкий автономный округ": "122",
    "Республика Алтай": "201",
    "Республика Тыва": "246",
    "Республика Хакасия": "257",
    "Алтайский край": "1362",
    "Красноярский край": "1712",
    "Иркутская область": "1113",
    "Кемеровская область — Кузбасс": "1276",
    "Новосибирская область": "1297",
    "Омская область": "1371",
    "Томская область": "218",
    "Республика Бурятия": "610",
    "Республика Саха (Якутия)": "419",
    "Забайкальский край": "521",
    "Приморский край": "1382",
    "Камчатский край": "224",
    "Хабаровский край": "754",
    "Амурская область": "633",
    "Магаданская область": "108",
    "Сахалинская область": "174",
    "Еврейская автономная область": "105",
    "Чукотский автономный округ": "12",
    "Сириус": "4"
  }

json_df = pd.DataFrame(list(dtps.items()), columns=['Регион использования авто', 'Количество дтп'])
print(json_df.head())
input()
a = ['Уникальный номер выпущенного полиса', 'Сумма премии выпущенного полиса ','Покрытие полиса', 'Выбранный ремонт по полису', 'Флаг оплаты полиса', 'Регион использования авто', 'Марка авто', 'Модель авто', 'Цена авто', 'Пробег авто', 'Флаг нового авто', 'Количество убытков за предыдущие периоды', 'Сумма убытков за предыдущие периоды', 'Год выпуска авто', 'Флаг кредитного авто', 'Стаж вождения', 'Пол водителя', 'Возраст водителя', 'Флаг выпуски полиса', 'Сумма предполагаемого убытка по полису', 'Флаг наличия предыдущего полиса другой страховой', 'Стоимость предыдущего полиса страховой', 'Флаг выпуска пролонгации', 'Флаг оплаты пролонгации'    ]
df.drop(columns=df.columns[0], axis= 1, inplace= True)


df.columns = a

df_dedup = df.sort_values('Сумма предполагаемого убытка по полису', ascending=False) \
             .drop_duplicates(subset=['Уникальный номер выпущенного полиса', 'Пол водителя', 'Возраст водителя'], keep='first')

df_dedup = df_dedup.sort_values('Стаж вождения', ascending=False) \
                   .drop_duplicates(subset=['Уникальный номер выпущенного полиса', 'Пол водителя', 'Возраст водителя'], keep='first')


# df = df.drop_duplicates(subset=['insurant_gender_cd', 'age', 'policy_rk'])
# df = df.drop_duplicates(subset=['min_driver_experience_years_cnt', 'expected_loss_amt'])


df_dedup = df_dedup.dropna(subset=['Возраст водителя'], axis='rows')

# plt.figure()
# df_dedup.plot(kind='bar',x='Флаг оплаты полиса',y='Уникальный номер выпущенного полиса')
# dtps_df['Регион использования авто'] = dtps_df['Регион использования авто'].astype(str)
result_df = pd.merge(df_dedup, json_df, how="inner")
# print(df_dedup.corr(numeric_only=True))
# df_dedup.#df is your dataframe
print(json_df.info)
print(result_df.head())
pivot_ui(result_df)
# result_df.to_csv("output1.csv", sep=',', encoding='utf-8', index=False)

# df_dedup.to_csv('deduplicated_dataset.csv', index=False)
